<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title>不是在改BUG，就是在改BUG的路上 - parallel programming</title>
	<link href="https://blog.kiyoko.io/tags/parallel-programming/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://blog.kiyoko.io"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2020-11-21T14:24:38+00:00</updated>
	<id>https://blog.kiyoko.io/tags/parallel-programming/atom.xml</id>
	<entry xml:lang="en">
		<title>并行程序设计</title>
		<published>2020-11-21T14:24:38+00:00</published>
		<updated>2020-11-21T14:24:38+00:00</updated>
		<link href="https://blog.kiyoko.io/introduction-to-parallel-programming/" type="text/html"/>
		<id>https://blog.kiyoko.io/introduction-to-parallel-programming/</id>
		<content type="html">&lt;h2 id=&quot;wei-shi-yao-xu-yao-bing-xing-cheng-xu&quot;&gt;为什么需要并行程序&lt;&#x2F;h2&gt;
&lt;p&gt;单核心的性能不满足需求。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ru-he-she-ji-bing-xing-cheng-xu&quot;&gt;如何设计并行程序&lt;&#x2F;h2&gt;
&lt;p&gt;在软件层面，通常的方案的基本思想是将要完成的任务分配给各个处理核心。有两种广泛采用的方法: &lt;strong&gt;任务并行&lt;&#x2F;strong&gt; 和 &lt;strong&gt;数据并行&lt;&#x2F;strong&gt;。&lt;&#x2F;p&gt;
&lt;p&gt;以如下问题解释说明:&lt;&#x2F;p&gt;
&lt;p&gt;试卷共计 5 道题目，有 100 名学生参加考试，5 名教师阅卷。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ren-wu-bing-xing&quot;&gt;任务并行&lt;&#x2F;h3&gt;
&lt;p&gt;将待解决的问题所需要执行的各个任务分配到各个核心上执行。&lt;&#x2F;p&gt;
&lt;p&gt;对应到上述问题中，可以认为每个阅卷教师就是一个处理核心，批改每一道题是一个任务。则将任务分配到核心的含义是: 每一名教师只需要负责批阅固定的一道题目。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shu-ju-bing-xing&quot;&gt;数据并行&lt;&#x2F;h3&gt;
&lt;p&gt;将待解决问题所需要处理的数据分配给各个处理核心，每个处理核心执行相同的操作。&lt;&#x2F;p&gt;
&lt;p&gt;对应到上述问题中，可以认为每个阅卷教师就是一个处理核心，将试卷 —— 也就是数据分配给教师，教师负责试卷的整个批阅过程。各个老师是做的工作是相同的。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xing-neng&quot;&gt;性能&lt;&#x2F;h2&gt;
&lt;p&gt;如何衡量并行程序的性能指标。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;jia-su-bi-he-xiao-lu&quot;&gt;加速比和效率&lt;&#x2F;h3&gt;
</content>
	</entry>
</feed>
